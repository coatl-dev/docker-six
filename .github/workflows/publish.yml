name: publish

on:
  release:
    types:
      - published

env:
  REGISTRY_IMAGE: coatldev/six

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Dockerfile subdirectory
        id: dockerfile
        run: echo "subdir=$(echo ${{ github.event.release.tag_name }} | cut -d '.' -f 1,2)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Python tags
        id: python
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/3.12') }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Python image
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./${{ steps.dockerfile.outputs.subdir }}/python
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.python.outputs.tags }}

      - name: Jython tags
        id: jython
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=pep440,prefix=jython-,pattern={{version}}
            type=pep440,prefix=jython-,pattern={{major}}.{{minor}}
            type=raw,enable=${{ startsWith(github.ref, 'refs/tags/3.12') }},value=jython

      - name: Build and push Jython image
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./${{ steps.dockerfile.outputs.subdir }}/jython
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.jython.outputs.tags }}
